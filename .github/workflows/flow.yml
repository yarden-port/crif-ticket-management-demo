name: Simulate External Ticket Lifecycle

on:
  workflow_dispatch:
    inputs:
      port_payload:
        required: true
        description: "Port payload with details about the ticket entity"
        type: string

jobs:
  simulate-ticket-lifecycle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Generate Port Access Token
        id: generate-token
        run: |
          access_token=$(curl --location --request POST 'https://api.getport.io/v1/auth/access_token' \
          --header 'Content-Type: application/json' \
          --data-raw '{
              "clientId": "'${{ secrets.PORT_CLIENT_ID }}'",
              "clientSecret": "'${{ secrets.PORT_CLIENT_SECRET }}'"
          }' | jq -r '.accessToken')
          echo "ACCESS_TOKEN=$access_token" >> $GITHUB_ENV

            - name: Determine Ticket Type and Create Entity
        id: create-ticket
        run: |
          echo '${{ inputs.port_payload }}' > payload.json
          TICKET_ID="ticket-sim-${{ github.run_id }}"
          TYPE=$(jq -r '.properties.type' payload.json)
          ORIGINAL_ID=$(jq -r '.identifier' payload.json)

          echo "TYPE=$TYPE" >> $GITHUB_ENV
          echo "TICKET_IDENTIFIER=$TICKET_ID" >> $GITHUB_ENV

          if [[ "$TYPE" == "Jira" ]]; then
            BP="jira_ticket"
            ticket_url="https://jira.example.com/browse/$TICKET_ID"
            jq -n \
              --arg id "$TICKET_ID" \
              --arg ticket_url "$ticket_url" \
              --arg original "$ORIGINAL_ID" \
              '{
                identifier: $id,
                title: "Jira Ticket Simulation",
                blueprint: "jira_ticket",
                properties: {
                  jira_project: "DEV",
                  jira_ticket_id: $id,
                  jira_url: $ticket_url,
                  status: "Open"
                },
                relations: {
                  original_ticket: $original
                }
              }' > payload.json

          elif [[ "$TYPE" == "SharePoint" ]]; then
            BP="sharepoint_ticket"
            sharepoint_url="https://sharepoint.example.com/$TICKET_ID"
            jq -n \
              --arg id "$TICKET_ID" \
              --arg sharepoint_url "$sharepoint_url" \
              --arg original "$ORIGINAL_ID" \
              '{
                identifier: $id,
                title: "SharePoint Ticket Simulation",
                blueprint: "sharepoint_ticket",
                properties: {
                  sharepoint_list: "Requests",
                  sharepoint_ticket_id: $id,
                  sharepoint_url: $sharepoint_url,
                  status: "Open"
                },
                relations: {
                  original_ticket: $original
                }
              }' > payload.json

          else
            BP="other_ticket_system"
            jq -n \
              --arg id "$TICKET_ID" \
              --arg original "$ORIGINAL_ID" \
              '{
                identifier: $id,
                title: "Other Ticket Simulation",
                blueprint: "other_ticket_system",
                properties: {
                  ticket_id: $id,
                  status: "Open"
                },
                relations: {
                  original_ticket: $original
                }
              }' > payload.json
          fi

          echo "BP=$BP" >> $GITHUB_ENV

          curl -s -X POST "https://api.getport.io/v1/blueprints/$BP/entities" \
            -H "Authorization: Bearer ${{ env.ACCESS_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d @payload.json


      - name: Update Status to In Progress (After 30s)
        run: |
          sleep 30
          curl -s -X PATCH "https://api.getport.io/v1/blueprints/${{ env.BP }}/entities/${{ env.TICKET_IDENTIFIER }}" \
          -H "Authorization: Bearer ${{ env.ACCESS_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"properties": { "status": "In Progress" }}'

      - name: Update Status to Resolved (After 30s)
        run: |
          sleep 30
          curl -s -X PATCH "https://api.getport.io/v1/blueprints/${{ env.BP }}/entities/${{ env.TICKET_IDENTIFIER }}" \
          -H "Authorization: Bearer ${{ env.ACCESS_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"properties": { "status": "Resolved" }}'

      - name: Update Status to Closed (After 30s)
        run: |
          sleep 30
          curl -s -X PATCH "https://api.getport.io/v1/blueprints/${{ env.BP }}/entities/${{ env.TICKET_IDENTIFIER }}" \
          -H "Authorization: Bearer ${{ env.ACCESS_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"properties": { "status": "Closed" }}'
